---
import BaseLayout from '@/layouts/BaseLayout.astro';
import itemsData from '@/data/items.json';

// „Ç´„ÉÜ„Ç¥„É™„ÉºÂà•„Å´„Ç¢„Ç§„ÉÜ„É†„ÇíÂàÜÈ°û
const itemsByCategory = itemsData.items.reduce((acc, item) => {
  if (!acc[item.category]) {
    acc[item.category] = [];
  }
  acc[item.category].push(item);
  return acc;
}, {} as Record<string, typeof itemsData.items>);

// „Ç´„ÉÜ„Ç¥„É™„ÉºÊÉÖÂ†±„ÇíÂèñÂæó
const categoryInfo = itemsData.categories.reduce((acc, cat) => {
  acc[cat.id] = cat;
  return acc;
}, {} as Record<string, typeof itemsData.categories[0]>);

// „É¨„Ç¢„É™„ÉÜ„Ç£ÊÉÖÂ†±
const rarityInfo = itemsData.rarities;
---

<BaseLayout
  title="„Ç¢„Ç§„ÉÜ„É†„Éá„Éº„Çø„Éô„Éº„Çπ - „Éï„Ç°„É≥„Çø„Ç∏„Éº„É©„Ç§„Éïi ÊîªÁï•Wiki"
  description="„Éï„Ç°„É≥„Çø„Ç∏„Éº„É©„Ç§„Éïi„ÅÆÂÖ®„Ç¢„Ç§„ÉÜ„É†‰∏ÄË¶ß„ÄÇÂõûÂæ©Ëñ¨„ÄÅÁ¥†Êùê„ÄÅÈ£üÊùê„Å™„Å©„ÄÅ„Ç´„ÉÜ„Ç¥„É™„ÉºÂà•„Å´Ê§úÁ¥¢ÂèØËÉΩ„ÄÇ"
  keywords={['„Ç¢„Ç§„ÉÜ„É†', '„Éá„Éº„Çø„Éô„Éº„Çπ', 'Á¥†Êùê', 'ÂõûÂæ©Ëñ¨', 'È£üÊùê']}
>
  <!-- „Éò„ÉÉ„ÉÄ„Éº -->
  <section class="bg-gradient-to-r from-primary-600 to-primary-800 text-white py-8">
    <div class="container-content">
      <div class="flex items-center space-x-2 text-sm mb-2">
        <a href="/" class="hover:text-primary-200 transition-colors">„Éõ„Éº„É†</a>
        <span>/</span>
        <a href="/database" class="hover:text-primary-200 transition-colors">„Éá„Éº„Çø„Éô„Éº„Çπ</a>
        <span>/</span>
        <span>„Ç¢„Ç§„ÉÜ„É†</span>
      </div>
      <h1 class="text-3xl font-display font-bold">„Ç¢„Ç§„ÉÜ„É†„Éá„Éº„Çø„Éô„Éº„Çπ</h1>
    </div>
  </section>

  <!-- „Éï„Ç£„É´„Çø„Éº -->
  <section class="py-6 bg-gray-50 dark:bg-background-dark-secondary sticky top-16 z-40">
    <div class="container-content">
      <div class="flex flex-wrap gap-4 items-center">
        <div class="flex items-center space-x-2">
          <label for="category-filter" class="text-sm font-medium">„Ç´„ÉÜ„Ç¥„É™„Éº:</label>
          <select
            id="category-filter"
            class="px-3 py-1 rounded-md border border-gray-300 focus:border-primary-500 focus:outline-none"
          >
            <option value="all">„Åô„Åπ„Å¶</option>
            {Object.entries(categoryInfo).map(([id, cat]) => (
              <option value={id}>{cat.icon} {id}</option>
            ))}
          </select>
        </div>
        
        <div class="flex items-center space-x-2">
          <label for="rarity-filter" class="text-sm font-medium">„É¨„Ç¢„É™„ÉÜ„Ç£:</label>
          <select
            id="rarity-filter"
            class="px-3 py-1 rounded-md border border-gray-300 focus:border-primary-500 focus:outline-none"
          >
            <option value="all">„Åô„Åπ„Å¶</option>
            {Object.entries(rarityInfo).map(([key, info]) => (
              <option value={key}>{info.name}</option>
            ))}
          </select>
        </div>
        
        <div class="flex items-center space-x-2">
          <label for="search-input" class="text-sm font-medium">Ê§úÁ¥¢:</label>
          <input
            type="text"
            id="search-input"
            placeholder="„Ç¢„Ç§„ÉÜ„É†Âêç„ÅßÊ§úÁ¥¢..."
            class="px-3 py-1 rounded-md border border-gray-300 focus:border-primary-500 focus:outline-none"
          />
        </div>
        
        <button
          id="reset-filters"
          class="ml-auto text-sm text-primary-600 hover:text-primary-700 transition-colors"
        >
          „Éï„Ç£„É´„Çø„Éº„Çí„É™„Çª„ÉÉ„Éà
        </button>
      </div>
    </div>
  </section>

  <!-- „Ç¢„Ç§„ÉÜ„É†‰∏ÄË¶ß -->
  <section class="py-8">
    <div class="container-content">
      {Object.entries(itemsByCategory).map(([category, items]) => (
        <div class="mb-12 item-category" data-category={category}>
          <h2 class="text-2xl font-display font-bold mb-4 flex items-center space-x-2">
            <span>{categoryInfo[category]?.icon || 'üì¶'}</span>
            <span>{category}</span>
            <span class="text-base text-text-secondary dark:text-text-secondary-dark">
              ({items.length}‰ª∂)
            </span>
          </h2>
          
          <div class="overflow-x-auto">
            <table class="w-full bg-white dark:bg-background-dark rounded-lg shadow-sm">
              <thead>
                <tr class="border-b border-gray-200 dark:border-gray-700">
                  <th class="text-left px-4 py-3 font-medium">„Ç¢„Ç§„ÉÜ„É†Âêç</th>
                  <th class="text-left px-4 py-3 font-medium">„É¨„Ç¢„É™„ÉÜ„Ç£</th>
                  <th class="text-left px-4 py-3 font-medium">Ë™¨Êòé</th>
                  <th class="text-left px-4 py-3 font-medium">ÂÖ•ÊâãÊñπÊ≥ï</th>
                  <th class="text-right px-4 py-3 font-medium">Â£≤ÂÄ§</th>
                </tr>
              </thead>
              <tbody>
                {items.map((item, index) => (
                  <tr
                    class={`
                      item-row border-b border-gray-100 dark:border-gray-800
                      hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors
                      ${index % 2 === 0 ? '' : 'bg-gray-50/50 dark:bg-gray-900/50'}
                    `}
                    data-name={item.name.toLowerCase()}
                    data-rarity={item.rarity}
                  >
                    <td class="px-4 py-3 font-medium">
                      <a
                        href={`/database/items/${item.id}`}
                        class="hover:text-primary-600 transition-colors"
                      >
                        {item.name}
                      </a>
                    </td>
                    <td class="px-4 py-3">
                      <span
                        class="inline-flex px-2 py-1 text-xs rounded-full"
                        style={`background-color: ${rarityInfo[item.rarity].color}20; color: ${rarityInfo[item.rarity].color}`}
                      >
                        {rarityInfo[item.rarity].name}
                      </span>
                    </td>
                    <td class="px-4 py-3 text-sm text-text-secondary dark:text-text-secondary-dark">
                      {item.description}
                    </td>
                    <td class="px-4 py-3 text-sm">
                      {item.acquisition.map((method) => (
                        <div class="mb-1">
                          <span class="font-medium">{method.method}:</span>
                          {' '}
                          {method.location || method.source || method.life}
                          {method.price && ` (${method.price}G)`}
                        </div>
                      ))}
                    </td>
                    <td class="px-4 py-3 text-right font-medium">
                      {item.sell_price}G
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      ))}
    </div>
  </section>

  <!-- Áµ±Ë®àÊÉÖÂ†± -->
  <section class="py-8 bg-gray-50 dark:bg-background-dark-secondary">
    <div class="container-content">
      <h2 class="text-xl font-display font-bold mb-4">„Ç¢„Ç§„ÉÜ„É†Áµ±Ë®à</h2>
      <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
        <div class="card text-center">
          <div class="text-3xl font-bold text-primary-600">{itemsData.items.length}</div>
          <div class="text-sm text-text-secondary dark:text-text-secondary-dark">Á∑è„Ç¢„Ç§„ÉÜ„É†Êï∞</div>
        </div>
        <div class="card text-center">
          <div class="text-3xl font-bold text-secondary-600">{Object.keys(categoryInfo).length}</div>
          <div class="text-sm text-text-secondary dark:text-text-secondary-dark">„Ç´„ÉÜ„Ç¥„É™„ÉºÊï∞</div>
        </div>
        <div class="card text-center">
          <div class="text-3xl font-bold text-accent-600">
            {itemsData.items.filter(item => item.rarity === 'legendary').length}
          </div>
          <div class="text-sm text-text-secondary dark:text-text-secondary-dark">„É¨„Ç∏„Çß„É≥„ÉÄ„É™„Éº</div>
        </div>
        <div class="card text-center">
          <div class="text-3xl font-bold text-primary-600">
            {Math.max(...itemsData.items.map(item => item.sell_price))}G
          </div>
          <div class="text-sm text-text-secondary dark:text-text-secondary-dark">ÊúÄÈ´òÂ£≤ÂÄ§</div>
        </div>
      </div>
    </div>
  </section>
</BaseLayout>

<script>
  // „Éï„Ç£„É´„Çø„ÉºÊ©üËÉΩ
  const categoryFilter = document.getElementById('category-filter') as HTMLSelectElement;
  const rarityFilter = document.getElementById('rarity-filter') as HTMLSelectElement;
  const searchInput = document.getElementById('search-input') as HTMLInputElement;
  const resetButton = document.getElementById('reset-filters');
  
  const filterItems = () => {
    const categoryValue = categoryFilter.value;
    const rarityValue = rarityFilter.value;
    const searchValue = searchInput.value.toLowerCase();
    
    // „Ç´„ÉÜ„Ç¥„É™„Éº„ÅÆË°®Á§∫/ÈùûË°®Á§∫
    document.querySelectorAll('.item-category').forEach(category => {
      const categoryEl = category as HTMLElement;
      if (categoryValue === 'all' || categoryEl.dataset.category === categoryValue) {
        categoryEl.style.display = 'block';
      } else {
        categoryEl.style.display = 'none';
      }
    });
    
    // „Ç¢„Ç§„ÉÜ„É†Ë°å„ÅÆ„Éï„Ç£„É´„Çø„É™„É≥„Ç∞
    document.querySelectorAll('.item-row').forEach(row => {
      const rowEl = row as HTMLElement;
      const name = rowEl.dataset.name || '';
      const rarity = rowEl.dataset.rarity || '';
      
      let show = true;
      
      if (rarityValue !== 'all' && rarity !== rarityValue) {
        show = false;
      }
      
      if (searchValue && !name.includes(searchValue)) {
        show = false;
      }
      
      rowEl.style.display = show ? '' : 'none';
    });
    
    // Á©∫„ÅÆ„Ç´„ÉÜ„Ç¥„É™„Éº„ÇíÈùûË°®Á§∫
    document.querySelectorAll('.item-category').forEach(category => {
      const categoryEl = category as HTMLElement;
      const visibleRows = categoryEl.querySelectorAll('.item-row:not([style*="display: none"])');
      if (visibleRows.length === 0 && categoryValue === 'all') {
        categoryEl.style.display = 'none';
      }
    });
  };
  
  categoryFilter.addEventListener('change', filterItems);
  rarityFilter.addEventListener('change', filterItems);
  searchInput.addEventListener('input', filterItems);
  
  resetButton?.addEventListener('click', () => {
    categoryFilter.value = 'all';
    rarityFilter.value = 'all';
    searchInput.value = '';
    filterItems();
  });
</script>
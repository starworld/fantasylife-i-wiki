---
import { getCollection } from 'astro:content';
import BaseLayout from '@/layouts/BaseLayout.astro';
import type { GetStaticPaths } from 'astro';

export const getStaticPaths = (async () => {
  const storyEntries = await getCollection('story');
  
  return storyEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}) satisfies GetStaticPaths;

const { entry } = Astro.props;
const { Content } = await entry.render();

// 関連記事を取得（同じchapterまたは前後のchapter）
const allStories = await getCollection('story');
const relatedStories = allStories
  .filter(story => 
    story.slug !== entry.slug && 
    Math.abs(story.data.chapter - entry.data.chapter) <= 1
  )
  .slice(0, 3);

// 前後の章を取得
const prevChapter = allStories.find(story => story.data.chapter === entry.data.chapter - 1);
const nextChapter = allStories.find(story => story.data.chapter === entry.data.chapter + 1);
---

<BaseLayout
  title={entry.data.title}
  description={entry.data.description}
  keywords={entry.data.keywords}
>
  <article>
    <!-- ヘッダー -->
    <header class="bg-gradient-to-r from-primary-600 to-primary-800 text-white py-12">
      <div class="container-content">
        <!-- パンくずリスト -->
        <nav class="flex items-center space-x-2 text-sm mb-4">
          <a href="/" class="hover:text-primary-200 transition-colors">ホーム</a>
          <span>/</span>
          <a href="/story" class="hover:text-primary-200 transition-colors">ストーリー攻略</a>
          <span>/</span>
          <span>第{entry.data.chapter}章</span>
        </nav>
        
        <h1 class="text-4xl font-display font-bold mb-4">
          {entry.data.title}
        </h1>
        
        <div class="flex flex-wrap items-center gap-4 text-sm">
          <div class="flex items-center space-x-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <span>推定時間: {entry.data.estimatedTime || '不明'}</span>
          </div>
          
          <div class="flex items-center space-x-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <span>
              難易度: 
              <span class={`
                inline-block px-2 py-0.5 rounded text-xs ml-1
                ${entry.data.difficulty === 'beginner' ? 'bg-green-100 text-green-800' : ''}
                ${entry.data.difficulty === 'intermediate' ? 'bg-yellow-100 text-yellow-800' : ''}
                ${entry.data.difficulty === 'advanced' ? 'bg-red-100 text-red-800' : ''}
              `}>
                {entry.data.difficulty === 'beginner' && '初級'}
                {entry.data.difficulty === 'intermediate' && '中級'}
                {entry.data.difficulty === 'advanced' && '上級'}
              </span>
            </span>
          </div>
          
          {entry.data.updateDate && (
            <div class="flex items-center space-x-2">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
              </svg>
              <span>最終更新: {entry.data.updateDate.toLocaleDateString('ja-JP')}</span>
            </div>
          )}
        </div>
      </div>
    </header>

    <!-- 本文 -->
    <div class="py-12">
      <div class="container-content">
        <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
          <!-- メインコンテンツ -->
          <div class="lg:col-span-3">
            {entry.data.prerequisites && entry.data.prerequisites.length > 0 && (
              <div class="card mb-6 border-l-4 border-yellow-500 bg-yellow-50 dark:bg-yellow-900/20">
                <h3 class="font-bold mb-2 flex items-center">
                  <svg class="w-5 h-5 mr-2 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                  </svg>
                  前提条件
                </h3>
                <ul class="list-disc list-inside space-y-1">
                  {entry.data.prerequisites.map(prereq => (
                    <li>{prereq}</li>
                  ))}
                </ul>
              </div>
            )}
            
            <div class="prose-custom">
              <Content />
            </div>
            
            <!-- 前後の章へのナビゲーション -->
            <nav class="mt-12 pt-8 border-t border-gray-200 dark:border-gray-700">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                {prevChapter && (
                  <a
                    href={`/story/${prevChapter.slug}`}
                    class="group flex items-center space-x-3 p-4 bg-gray-50 dark:bg-gray-800 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors"
                  >
                    <svg class="w-5 h-5 text-gray-400 group-hover:text-primary-600 transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                    </svg>
                    <div>
                      <div class="text-xs text-gray-500">前の章</div>
                      <div class="font-medium group-hover:text-primary-600 transition-colors">
                        {prevChapter.data.title}
                      </div>
                    </div>
                  </a>
                )}
                
                {nextChapter && (
                  <a
                    href={`/story/${nextChapter.slug}`}
                    class="group flex items-center justify-end space-x-3 p-4 bg-gray-50 dark:bg-gray-800 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors ml-auto text-right"
                  >
                    <div>
                      <div class="text-xs text-gray-500">次の章</div>
                      <div class="font-medium group-hover:text-primary-600 transition-colors">
                        {nextChapter.data.title}
                      </div>
                    </div>
                    <svg class="w-5 h-5 text-gray-400 group-hover:text-primary-600 transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                    </svg>
                  </a>
                )}
              </div>
            </nav>
          </div>

          <!-- サイドバー -->
          <aside class="lg:col-span-1 space-y-6">
            <!-- 目次（仮） -->
            <div class="card sticky top-20">
              <h3 class="font-bold mb-4">目次</h3>
              <nav class="space-y-2 text-sm">
                <a href="#" class="block text-gray-600 hover:text-primary-600 transition-colors">
                  章の概要
                </a>
                <a href="#" class="block text-gray-600 hover:text-primary-600 transition-colors">
                  メインクエスト攻略
                </a>
                <a href="#" class="block text-gray-600 hover:text-primary-600 transition-colors">
                  ボス攻略
                </a>
                <a href="#" class="block text-gray-600 hover:text-primary-600 transition-colors">
                  サブクエスト一覧
                </a>
                <a href="#" class="block text-gray-600 hover:text-primary-600 transition-colors">
                  隠し要素
                </a>
              </nav>
            </div>
            
            <!-- 関連記事 -->
            {relatedStories.length > 0 && (
              <div class="card">
                <h3 class="font-bold mb-4">関連する攻略記事</h3>
                <div class="space-y-3">
                  {relatedStories.map(story => (
                    <a
                      href={`/story/${story.slug}`}
                      class="block p-3 bg-gray-50 dark:bg-gray-800 rounded hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors"
                    >
                      <div class="text-sm font-medium line-clamp-2">
                        {story.data.title}
                      </div>
                      <div class="text-xs text-gray-500 mt-1">
                        第{story.data.chapter}章
                      </div>
                    </a>
                  ))}
                </div>
              </div>
            )}
            
            <!-- 広告スペース -->
            <div class="ad-container">
              <span class="text-gray-500 text-sm">広告</span>
            </div>
          </aside>
        </div>
      </div>
    </div>
  </article>
</BaseLayout>

<style>
  /* 記事内の見出しにアンカーリンクを追加するスタイル */
  .prose-custom :where(h2, h3, h4):hover::before {
    content: '#';
    position: absolute;
    left: -1.5rem;
    color: #9ca3af;
    font-weight: normal;
  }
  
  .prose-custom :where(h2, h3, h4) {
    position: relative;
  }
</style>
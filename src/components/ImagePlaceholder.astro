---
export interface Props {
  width: number;
  height: number;
  text?: string;
  className?: string;
  type?: 'avatar' | 'banner' | 'thumbnail' | 'icon';
}

const { width, height, text = 'Image', className = '', type = 'thumbnail' } = Astro.props;

const bgColors = {
  avatar: '#818CF8',
  banner: '#F59E0B',
  thumbnail: '#10B981',
  icon: '#EC4899',
};

const bgColor = bgColors[type];
---

<div
  class={`image-placeholder flex items-center justify-center bg-gray-200 dark:bg-gray-700 rounded-lg overflow-hidden ${className}`}
  style={`width: ${width}px; height: ${height}px; background-color: ${bgColor}20;`}
>
  <div class="text-center">
    <svg
      class="w-12 h-12 mx-auto mb-2 text-gray-400"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"
      />
    </svg>
    <span class="text-xs text-gray-500">{text}</span>
    <div class="text-xs text-gray-400 mt-1">{width}x{height}</div>
  </div>
</div>

<style>
  .image-placeholder {
    position: relative;
    background-image: 
      linear-gradient(45deg, #f3f4f6 25%, transparent 25%),
      linear-gradient(-45deg, #f3f4f6 25%, transparent 25%),
      linear-gradient(45deg, transparent 75%, #f3f4f6 75%),
      linear-gradient(-45deg, transparent 75%, #f3f4f6 75%);
    background-size: 20px 20px;
    background-position: 0 0, 0 10px, 10px -10px, -10px 0px;
  }
  
  .dark .image-placeholder {
    background-image: 
      linear-gradient(45deg, #374151 25%, transparent 25%),
      linear-gradient(-45deg, #374151 25%, transparent 25%),
      linear-gradient(45deg, transparent 75%, #374151 75%),
      linear-gradient(-45deg, transparent 75%, #374151 75%);
  }
</style>